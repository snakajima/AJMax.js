.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "LOGGER" "" "September 2010" "" ""
.
.SH "NAME"
\fBlogger\fR
.
.SH "Logger"
The \fIlogger\fR middleware provides common log format support, as well as custom formats, below is the default usage:
.
.IP "" 4
.
.nf

connect\.createServer(
    connect\.logger(),
);
.
.fi
.
.IP "" 0
.
.P
The logger also has built in buffering support to increase performance\. When the \fBbuffer\fR option is set to \fBtrue\fR it defaults to 1000 milliseconds, however you can specify your own duration\. When using the \fBbuffer\fR option log lines are not written to the stream immediately, they are buffered in an array, and flushed periodically\.
.
.IP "" 4
.
.nf

connect\.createServer(
    connect\.logger({ buffer: 2000 })
);
.
.fi
.
.IP "" 0
.
.P
A custom format can also be passed:
.
.IP "" 4
.
.nf

connect\.createServer(
    connect\.logger({ format: \':method :url :response\-time\' })
);
.
.fi
.
.IP "" 0
.
.P
The following format tokens are currently available:
.
.IP "" 4
.
.nf

:req[header]    Arbitrary request header, ex: req[Accept]
:res[header]    Arbitrary response header, ex: res[Content\-Type]
:http\-version   HTTP request version
:response\-time  Response time in milliseconds
:remote\-addr    Remote address
:date           UTC date
:method         Request method
:url            Request url
:referrer       Request referrer / referer
:user\-agent     User\-Agent string
:status         Response status
.
.fi
.
.IP "" 0
.
.SS "Environment Variables"
.
.nf

\-\-logFormat
.
.fi

