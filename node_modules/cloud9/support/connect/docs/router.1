.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "ROUTER" "" "September 2010" "" ""
.
.SH "NAME"
\fBrouter\fR
.
.SH "Rest"
The \fIrouter\fR middleware provides a routing API similar to that of Sinatra and Express\.
.
.IP "" 4
.
.nf

function user(app) {
    app\.get(\'/users/(all\.:format?)?\', function(req, res, next){
        // populates req\.format
        // ex:
        //   GET /users
        //   GET /users/all
        //   GET /users/all\.json
        //   GET /users/all\.xml
    });

    app\.get(\'/users/:id\.:format?\', function(req, res, next){
        // populates req\.format
        // populates req\.params\.id
        // ex:
        //   GET /user/5
        //   GET /user/5\.json
        //   GET /user/5\.xml
    });

    app\.put(\'/user/:id\', function(req, res, next){
        // populates req\.params\.id
        // ex:
        //   PUT /user/2
    });

    app\.del(\'/user/:id/file/*\', function(req, res, next){
        // populates req\.params\.id
        // populates req\.params[0]
        // ex:
        //   PUT /user/4/file/javascripts/jquery\.js
        //   PUT /user/4/file/stylecss
    });
}

function commits(app) {
    // RegExps too!
    app\.get(/\e/commit\e/(\ew+)\e\.\e\.(\ew+)\e/?/i, function(req, res, next){
        // populates req\.params[0] with first capture group
        // populates req\.params[1] with second capture group
        // ex:
        //   GET /commit/kj4k\.\.d3sdf
    });
}

connect\.createServer(
    connect\.router(user),
    connect\.router(commits),
);
.
.fi
.
.IP "" 0
.
.P
Those of you looking for \fIPUT\fR and \fIDELETE\fR support may want to take a look at the \fImethodOverride\fR middleware\.
.
.SS "See Also"
.
.IP "\(bu" 4
methodOverride
.
.IP "" 0

